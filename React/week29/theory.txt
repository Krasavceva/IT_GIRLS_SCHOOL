1. В компонент передаются атрибуты `description` и `title` . 
Могу ли я их сложить как на примере, чтобы получить одну строку и вывести в компоненте?

import React from "react";
import styles from './button.css'

export default class Example extends React.Component {
    render() {
				let {description,title} = this.props
				title += description; //title = title + description
         return (
            <span>{title}</span>
        );
    }
}
Теоретически это возможно сделать, но это будет не совсем верно, т.к.
description и title это 2 разных компонента и при сложении title перересуется уже в новый компонент, не тот, что мы создали изначально. 
И так можно в дальнейшем запутаться.


2. С помощью какого метода можно отловить изменение props?
Метод static getDerivedStateFromProps(nextProps, prevState)

3. Оператор расширения часто используется также для клонирования объекта. Подумайте, чем отличаются эти две записи и какую проблему решает здесь оператор расширения:

const initialObj = { title:'Hello', text:'World' }

//№1
const firstObj = initialObj

//№2
const secondObj = {...initialObj}


4. В каком из методов жизненного цикла лучше всего использовать методы вызова API и обращения к веб-хранилищам, если они должны быть вызваны всего один раз при загрузке страницы?
В методе componentDidMount() - Этот метод вызывается один раз в жизненном цикле сразу после монтирования компонента в DOM. 



5. С помощью какого метода можно отловить и отрисовать для пользователя возникшую в компоненте ошибку?
Метод componentDidCatch. Это метод жизненного цикла который дает разработчику возможность обработать или залогировать эти ошибки.


6. Какой код обычно пишут в конструкторе? Для каких задач он используется?


7. Что делает функция render()? Что может ее вызвать?
Функция render() отрисовывает наш компонент. 

8. Что нужно изменить в коде из урока (видео), чтобы начальные параметры у компонента приходили из пропсов, но если пропсы вообще не заданы, начальные значения были инициализированы нулями?


9. Можно ли несколько раз использовать хук useEffect внутри одного компонента?


10. Можно ли не передавать второй аргумент в хук useEffect, что  тогда произойдет?


11. Что означает возвращение функции в теле  хука useEffect? 


12. Будут ли перерисованы дочерние элементы компонента при вызове метода forceUpdate()?

