1. Что такое props и можно ли использовать props в функциональных компонентах?
Props это параметры нашего компонента. Используется для того, чтобы не писать новый код под каждый объект,
а лишь подставлять данные в существующий компонент.
Props можно использовать как в функциональных компонентах (передаем как параметр), так и в классовых (через this).


2. Нужно ли выделять в отдельный компонент статью в блоге?
Нужно, т.к. подобных статей может быть много.


3. Можно ли использовать React без JSX?
JSX нам нужен, когда нам необходимо делать разметку. 
JS когда пишем обычные функции.
Вывод: Можно,но лучше использовать JSX ))


4. Чем отличается JSX от HTML?
JSX делает разметку.
Если HTML это обычная строка, то в JSX только объект.


5. Для чего нам нужны свойства (props) компонентов? 
Чтобы не повторять один и тот же код много раз, а подставлять данные в существующий компанент.
Что позволяет в разы сократить код и сэкономить время.


6. В примере с `CardList` чем можно было бы заменить `<React.Fragment>`?
Существует и короткий синтаксис, но пока что его поддерживают не все популярные инструменты:
Вместо <React.Fragment> можно обернуть код в пустые скобки <> </>
Или использовать обычный <div/> ести это не мешает нормальному позиционированию элементов.


7. Можно ли сказать, что классовые и функциональные компоненты равнозначны по функциональности?
В общем да. 


8. Можно ли полностью описать приложение, используя только функциональные компоненты? 
Да. Можно.


9. Какой командой мы делаем экспорт компонента для возможности его использования в других местах приложения? 
Команда export defauld имя компонента


10. Изучите структуру компонент в проекте [https://github.com/alisa-tsvetkova/EthereumUI](https://github.com/alisa-tsvetkova/EthereumUI) 
и напишите, какой именно компонент является самым верхним, а какой - самым "глубоким"?
Cамым верхним явл. - App.js 
Самым "глубоким" - Block

11. Какой командой можно сгенерировать разметку/компоненты на основе заранее заданного массива элементов? 
Приведите пример.
Команда map()
Например:

const users = [
 {name: "Коля", age = 30
},
 {name: "Вася", age = 28
},
 {name: "Петя", age = 42
}
];

class App extends React.Component {
render(){
   return (
       <div className="App"> 
        {
            users.map((user) =>
            <User name={user.name} age={user.age}/>
             )
        }
        </div>
    



   )


}





}