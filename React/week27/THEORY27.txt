1. Какую ошибку я допустила в [этом](https://www.notion.so/27-076f6e0f9f454440be8ec3c04b61789c) примере?  
В выражении 1.5 em допущен лишний и ненужный пробел перед em.


2. Какие есть способы работы со стилями в React?
 - ИНЛАЙНОВЫЙ(не рекомендуется, только для проверки)
 const Button = () => (
  <button style={{backgroundColor: 'red'}}>Нажми меня</button>
)
 - ВЫНОС СТИЛЕЙ В ПЕРЕМЕННУЮ, т.к. стиль это тоже объект
 const myStyle = {
  width: 200,
  height: 50,
	fontSize: '1.5 em',
  backgroundColor: 'red',
};

const Button = () => (
  <button style={ myStyle }>Нажми меня</button>
)
- ОТДЕЛЬНЫЙ ФАЙЛ CSS, который можно импортировать в компонент и добавлять как аттрибут className.
/* button.css */
.button {
    width: 200px;
    line-height: 1.5em;
    text-transform: uppercase;
    margin: 20px;
}

.button__success {
    background: green;
    color: white;
}

import React from "react";
import styles from './button.css'

export default class Button extends React.Component {
    render() {
         return (
            <button className={'button button__success'}>
                Нажми меня
            </button>
        );
    }
}

- CSS МОДУЛИ
CSS классы доступны только внутри компонента, в котором он используется.
Необходимо переименовать файл стилей по шаблону [name].module.css или [name].module.scss



3. Как будет выглядеть карточка товара, если ей передать аттрибут `addedToCart`===0?
То кнопка 
Eсли addedToCart===0, то атрибут примет значение false. И значит ветка кода выполнится эта - actionItem = <AddToCartButton />;

4. Какие еще проверки нужно было бы сделать для аттрибута `addedToCart`?
Можно изменить цвет кнопок, если товар добавлен в корзину.
Также ограничить количество товара: если в наличии есть, например, только 2 таких товара, то выбрать большее кол-во невозможно.
Или просто даже проверить пришел ли такой пропс, не равен ли он null или undefined.

5. Клиент попросил повесить тег "New" на товары из новой коллекции. Как это сделать, какой условный оператор выбрать?
Можно использовать 
TЕРНАРНЫЙ ОПЕРАТОР
isNew ? "вешаем тег new" : "";


if(изначально товар без тега, но если у него есть свойство isNew, то вешаем тег)
let newProduct = "";
if(isNew) new="ok";


&&
{isNew &&
  //вешаем тег #NEW
}


6. Какими тремя способами можно написать условный рендеринг? 
 - Оператор if ... else
 - Тернарный оператор
 - Логический оператор &&


7. Представьте, что вы пишете компонент логина. Если пользователь авторизован, то мы показываем его имя, а если нет, то даем возможность ввода логина и пароля. 
Какой код для этого нужно написать, если за авторизацию пользователя отвечает флаг isAutorized?
Здесь можно использовать тернарный оператор:
isAutorized ? <userName> : <Form>;


8. В чем преимущества использования препроцессоров? 
 - Разделение на небольшие файлы. Мы можем организовать блочную систему стилей
 - Вложенность. Позволяет не повторять написание селектора, внутри которого нужно что-то стилизовать. Просто пишем вложенные селекторы внутри родительских.
 - Переменные. Вынести общие (цвета, размеры шрифта, и т. д.) и импортировать их в нужный файл
 - Mixin(миксины), которые похожи на функции в JS.
 Mixin позволяет создавать группы  объявлений CSS , которые можно повторно использовать на своем сайте.
 - Операторы (для математических вычислений)
 - Амперсанд. Позволяет не повторять родительский селектор, быстро менять его. Помогает сделать код читабельней.
 .btn {
  color: #000;

  &:hover { // после компиляции превратится в .btn:hover {...}
    color: #808080;
  }

}
 - Встроенные модули.

Какой есть еще способ использовать переменные, кроме $ в препроцессорах?
 - Подключение переменных из другого файла
 - Встроенные переменные (Переменные, определенные встроенным модулем, не могут быть изменены.)
 - Локальные переменные можно даже объявлять с тем же именем, что и глобальная переменная. и это будут 2 разные переменные
 Чтобы установить значение глобальной переменной из локальной области видимости (например, в миксине), можно использовать флаг !global.